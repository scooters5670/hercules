<!--
Para torrents !


<item>
<SetViewMode>500</SetViewMode>
<title>[COLOR orange] [/COLOR][COLOR white]Torrent[/COLOR]</title>
<thumbnail></thumbnail>
<fanart></fanart>
<info>
</info>
<link>$doregex[select]</link>
<regex>
<name>select</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import xbmcgui
    dialog = xbmcgui.Dialog()
    ret = dialog.select('Ver via:', ['Quasar', 'Torrenter', 'Por defecto'])
    channels = ['plugin://plugin.video.quasar/play?uri=', 'plugin://plugin.video.torrenter/?action=playSTRM&url=', 'plugin://plugin.video.quasar/play?uri=']
    return channels[ret]
]]></expres>
<page></page>
</regex>
<thumbnail></thumbnail>
<fanart></fanart>
</item>

<!--  Regex para streamplay,streamcloud,openload,StreamGo,Uptobox,Yourupload

<item>
<title>[COLOR orange][/COLOR][COLOR white][/COLOR]</title>
<thumbnail></thumbnail> 
<fanart></fanart>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = ' Url de la pelicula'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail></thumbnail> 
<page></page>
</item>

<item>
<SetViewMode>500</SetViewMode>
<title>[COLOR orange]Angry Birds [/COLOR][COLOR white]Torrent[/COLOR]</title>
    <thumbnail>https://images-na.ssl-images-amazon.com/images/M/MV5BMTY3MjU0NDA0OF5BMl5BanBnXkFtZTgwNTc0MTU3OTE@._V1_UY268_CR3,0,182,268_AL_.jpg</thumbnail>
<fanart>https://images-na.ssl-images-amazon.com/images/M/MV5BMTY3MjU0NDA0OF5BMl5BanBnXkFtZTgwNTc0MTU3OTE@._V1_UY268_CR3,0,182,268_AL_.jpg</fanart>
    <info>
Título original
The Angry Birds Movie aka 
Año
2016
Duración
97 min.
Basada en la colección de videojuegos "Angry Birds", la historia se desarrolla en una isla poblada por aves felices que no vuelan. En este paraíso, Red, un pájaro con muy mal genio, el veloz Chuck y el volátil Bomb nunca han terminado de encajar. Pero cuando llegan a la isla unos misteriosos cerdos verdes, serán estos tres marginados los que averigüen qué traman los extraños visitantes.   
</info>
<link>$doregex[select]</link>
<regex>
<name>select</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import xbmcgui
    dialog = xbmcgui.Dialog()
    ret = dialog.select('Ver via:', ['Quasar', 'Torrenter', 'Por defecto'])
    channels = ['plugin://plugin.video.quasar/play?uri=http://www.gruponetai.com/portal/peliculas/torrents/Angry_birds_la_pelicula_MicroHD.torrent', 'plugin://plugin.video.torrenter/?action=playSTRM&url=http://www.gruponetai.com/portal/peliculas/torrents/Angry_birds_la_pelicula_MicroHD.torrent', 'plugin://plugin.video.quasar/play?uri=http://www.gruponetai.com/portal/peliculas/torrents/Angry_birds_la_pelicula_MicroHD.torrent']
    return channels[ret]
]]></expres>
<page></page>
</regex>
<thumbnail>https://images-na.ssl-images-amazon.com/images/M/MV5BMTY3MjU0NDA0OF5BMl5BanBnXkFtZTgwNTc0MTU3OTE@._V1_UY268_CR3,0,182,268_AL_.jpg</thumbnail>
<fanart>https://images-na.ssl-images-amazon.com/images/M/MV5BMTY3MjU0NDA0OF5BMl5BanBnXkFtZTgwNTc0MTU3OTE@._V1_UY268_CR3,0,182,268_AL_.jpg</fanart>
</item>
-->

<!-- Prueba de selector torrent y calidad.

<item>
<SetViewMode>500</SetViewMode>
<title>[COLOR orange]Animales fantásticos y dónde encontrarlos[/COLOR][COLOR white] 2016[/COLOR]</title>
<info>
Año:2016
Duración: 133 min.
Sinopsis:
Año 1926. Newt Scamander acaba de completar un viaje por todo el mundo para encontrar y documentar una extraordinaria selección de criaturas mágicas. Llegando a Nueva York para hacer una breve parada en su camino, donde podría haber llegado y salido sin incidentes…pero no para un Muggle llamado Jacob, un caso perdido de magia, y la fuga de algunas criaturas fantásticas de Newt, que podrían causar problemas el mundo mágico y en el mundo Muggle. 
</info>
<link>$doregex[select]</link>
<regex>
<name>select</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import xbmcgui
    dialog = xbmcgui.Dialog()
    ret = dialog.select('Ver via:', ['Quasar', 'Torrenter', 'Por defecto'])
    channels = ['plugin://plugin.video.quasar/play?uri=https://files.grantorrent.com/torrents/peliculas/animales_fantasticos_y_donde_encontrarlos_hdrip.torrent',
	'plugin://plugin.video.quasar/play?uri=https://files.grantorrent.com/torrents/peliculas/animales_fantasticos_y_donde_encontrarlos_MicroHD.torrent', 
	'plugin://plugin.video.quasar/play?uri=https://files.grantorrent.com/torrents/peliculas/animales_fantasticos_y_donde_encontrarlos_Bluray.torrent',
	'plugin://plugin.video.torrenter/?action=playSTRM&url=https://files.grantorrent.com/torrents/peliculas/animales_fantasticos_y_donde_encontrarlos_hdrip.torrent', 
	'plugin://plugin.video.torrenter/?action=playSTRM&url=https://files.grantorrent.com/torrents/peliculas/animales_fantasticos_y_donde_encontrarlos_MicroHD.torrent', 
	'plugin://plugin.video.torrenter/?action=playSTRM&url=https://files.grantorrent.com/torrents/peliculas/animales_fantasticos_y_donde_encontrarlos_Bluray.torrent']
    return channels[ret]
]]></expres>
<page></page>
</regex>
<thumbnail>http://www.fotogramas.es/var/ezflow_site/storage/images/peliculas/animales-fantasticos-y-donde-encontrarlos/103227800-2-esl-ES/Animales-fantasticos-y-donde-encontrarlos.jpg</thumbnail>
<fanart>http://www.fotogramas.es/var/ezflow_site/storage/images/peliculas/animales-fantasticos-y-donde-encontrarlos/103227800-2-esl-ES/Animales-fantasticos-y-donde-encontrarlos.jpg</fanart>

</item>
-->

<!-- 0-9 @# -->
<item>
<title>[COLOR orange]60 Segundos[/COLOR] Castellano [COLOR white] StreamGo [/COLOR]</title>
    <info>
    Hace ya tiempo que Randall "Memphis" Raines (Nicolas Cage) ha dejado atrás su pasado delictivo. Sin embargo, se ve obligado a volver... cuando su hermano Kip (Giovanni Ribisi) falla al realizar un trabajo para Raymond Calitri (Christopher Eccleston), un famoso broker del robo de vehículos. Ahora, para salvar a su hermano, Memphis deberá reunir a su antiguo equipo para robar 50 coches de lujo. Con la policía tras él, Memphis deberá cumplir el trato y robar cada auto en 60 segundos. 
Elenco: Nicolas Cage , Giovanni Ribisi , Angelina Jolie , T.J. Cross , Robert Duvall , William Lee Scott , Scott Caan , James Duval , Delroy Lindo , Timothy Olyphant , Chi McBride , Christopher Eccleston , Grace Zabriskie , Vinnie Jones , Will Patton , Michael Peña .
    </info>
<thumbnail>http://hdfull.tv/tthumb/172x256/movie_9a3f0952d44879cc3c57c4f5ee96d02b.jpg</thumbnail> 
<fanart>http://hdfull.tv/tthumb/172x256/movie_9a3f0952d44879cc3c57c4f5ee96d02b.jpg</fanart>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'https://streamango.com/f/nandstmtadtmlpfn'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>http://hdfull.tv/tthumb/172x256/movie_9a3f0952d44879cc3c57c4f5ee96d02b.jpg</thumbnail> 
<page></page>
</item>

<!-- A -->

<item>
<SetViewMode>500</SetViewMode>
<title>[COLOR orange]Agente Contrainteligente [/COLOR][COLOR white]Torrent[/COLOR]</title>
    <thumbnail>http://es.web.img2.acsta.net/pictures/16/02/15/17/31/232750.jpg</thumbnail>
<fanart>http://es.web.img2.acsta.net/pictures/16/02/15/17/31/232750.jpg</fanart>
    <info>
Título:
Agente contrainteligente
Año: 2016
Duración: 80 min.
Un implacable agente del MI6 británico (Mark Strong), del grupo de operaciones especiales, descubre que tiene un hermano (Sacha Baron Cohen) muy diferente a él: fanático del fútbol y protagonista de numerosos y disparatados altercados dado su peculiar y conflictivo carácter. 
<link>$doregex[select]</link>
<regex>
<name>select</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import xbmcgui
    dialog = xbmcgui.Dialog()
    ret = dialog.select('Ver via:', ['Quasar', 'Torrenter', 'Por defecto'])
    channels = ['plugin://plugin.video.quasar/play?uri=http://www.gruponetai.com/portal/peliculas/torrents/Agente_contrainteligente_MicroHD_1080p.torrent', 
	'plugin://plugin.video.torrenter/?action=playSTRM&url=http://www.gruponetai.com/portal/peliculas/torrents/Agente_contrainteligente_MicroHD_1080p.torrent', 
	'plugin://plugin.video.quasar/play?uri=http://www.gruponetai.com/portal/peliculas/torrents/Agente_contrainteligente_MicroHD_1080p.torrent']
    return channels[ret]
]]></expres>
<page></page>
</regex>
    <thumbnail>http://es.web.img2.acsta.net/pictures/16/02/15/17/31/232750.jpg</thumbnail>
<fanart>http://es.web.img2.acsta.net/pictures/16/02/15/17/31/232750.jpg</fanart>
</item>
<item>
<thumbnail>https://image.tmdb.org/t/p/original/$doregex[imagen]</thumbnail> 
<fanart>https://image.tmdb.org/t/p/original/$doregex[imagen]</fanart>

 <link>$doregex[id3]</link>
 
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'https://streamango.com/f/febbempdbmraefns/Anacleto_agente_secreto_HDRip_EliteTorrent_net_avi_mp4'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>https://image.tmdb.org/t/p/original/$doregex[imagen]</thumbnail> 
<regex><name>imagen</name><expres><![CDATA[poster_path\":\"\\/(.*?)\"]]></expres><page>https://api.themoviedb.org/3/search/movie?api_key=3d8a2c67653e2f8fd7dd09959e835f02&amp;language=es&amp;query=$doregex[nombre2]</page></regex>
<title>[COLOR orange]$doregex[nombre]  [/COLOR][COLOR white] [/COLOR]</title>
<info></info>
<regex><name>nombre</name><expres> Anacleto: agente secreto</expres><page></page></regex>
<regex><name>nombre2</name><expres>$pyFunction:'$doregex[nombre]'.replace(" ", "+")</expres>
<page></page></regex>
</item>
<!-- B -->
<item>
<title>[COLOR orange]Barry Seal[/COLOR][COLOR white]El traficante | 720[/COLOR]</title>
<info></info>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'http://streamcloud.eu/4uju80m865vi'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>http://hdfull.tv/tthumb/172x256/movie_ae5d3e5563b41e908172a55ac4a198ac.jpg</thumbnail> 
<fanart>http://hdfull.tv/tthumb/172x256/movie_ae5d3e5563b41e908172a55ac4a198ac.jpg</fanart>
<page></page>
</item>

<item>
<title>[COLOR orange]Barry Seal[/COLOR][COLOR white]El traficante | openload [/COLOR]</title>
<info>Basada en la vida real de Barry Seal, 
un expiloto que se convirtió en un importante narcotraficante en el cartel de Medellín
 y que acabó siendo reclutado por la CIA y el departamento de inteligencia de la DEA.</info>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'http://streamcloud.eu/1h3vfkko44vt'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>http://hdfull.tv/tthumb/172x256/movie_ae5d3e5563b41e908172a55ac4a198ac.jpg</thumbnail> 
<fanart>http://hdfull.tv/tthumb/172x256/movie_ae5d3e5563b41e908172a55ac4a198ac.jpg</fanart>
<page></page>
</item>
<item>
<thumbnail>https://images-na.ssl-images-amazon.com/images/M/MV5BNTA4MjQ0ODQzNF5BMl5BanBnXkFtZTgwNzA5NjYzMjI@._V1_UX182_CR0,0,182,268_AL_.jpg</thumbnail> 
<link>$doregex[url]</link>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'http://uptobox.com/nvq0h59zvo8f'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<regex>
<name></name>
<expres><![CDATA[poster_path\":\"\\/(.*?)\"]]></expres><page>https://api.themoviedb.org/3/search/movie?api_key=3d8a2c67653e2f8fd7dd09959e835f02&amp;language=es&amp;query=$doregex[nombre2]</page></regex>
<title>[COLOR orange] Baywatch: Los vigilantes de la playa (2017) [/COLOR][COLOR white] 720p. [/COLOR][COLOR gold] HD [/COLOR]</title>
    <info></info>
<regex><name>nombre</name><expres></expres><page></page></regex>
<page></page>
</regex>
</item>



<item>
<title>[COLOR orange]Bright [/COLOR][COLOR white] 2017[/COLOR]</title>
<link>$doregex[makelist]</link>
<thumbnail>https://noescinetodoloquereluce.com/wp-content/uploads/2017/11/brightposter.jpg</thumbnail>
<fanart>https://noescinetodoloquereluce.com/wp-content/uploads/2017/11/brightposter.jpg</fanart>
<info>Ambientada en un presente alternativo donde los seres humanos, orcos, elfos y hadas han convivido desde el inicio de los tiempos, dos policías con perfiles muy distintos patrullan juntos. Uno es el humano Ward (Will Smith), y el otro el orco Jakoby (Joel Edgerton). Ambos inician una guardia nocturna que cambiará el futuro y el mundo que conocen. A pesar de sus diferencias personales, deberán trabajar juntos para proteger a una joven elfo y una reliquia perdida que, de caer en las manos equivocadas, podría destruirlo todo.</info>
<regex>
  <name>makelist</name>
  <listrepeat><![CDATA[
        <title>[makelist.param3]</title> 
        <link>$doregex[getUrl]</link>

]]></listrepeat>
<expres><![CDATA[href="\/.*,(.*?),list.*\n.*\n.*\n.*href="\/([^"]*)".*?>(.*?)<]]></expres>
<page>http://diskokosmiko.mx/moipera/bright-99139</page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>getUrl</name>
<expres>DownloadUrl":"([^"]+)<expres>
<page>http://diskokosmiko.mx/action/DownloadFile?location=fi&f=[makelist.param1]</page>
<rawpost>fileId=[makelist.param1]&__RequestVerificationToken=$doregex[tok]</rawpost>
<referer>http://diskokosmiko.mx/[makelist.param2]</referer>
<connection>keep-alive</connection>
<accept>*/*</accept>
<X-Req>XMLHttpRequest</X-Req>
<cookieJar></cookieJar>
</regex>
<regex>
<name>tok</name>
<expres>DownloadFile.*RequestVerificationToken.*?value="([^"]+)<expres>
<page>http://diskokosmiko.mx/[makelist.param2]</page>
<referer>http://diskokosmiko.mx</referer>
<connection>keep-alive</connection>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://noescinetodoloquereluce.com/wp-content/uploads/2017/11/brightposter.jpg</thumbnail>
<fanart>https://noescinetodoloquereluce.com/wp-content/uploads/2017/11/brightposter.jpg</fanart>
</item>
<!-- C -->

<!-- D -->

<!-- E -->
<item>
<title>[COLOR orange]$doregex[nombre]  [/COLOR][COLOR white] [/COLOR]</title>
    <info></info>
<thumbnail>https://images-na.ssl-images-amazon.com/images/M/MV5BMjY2OTM2Njc3Ml5BMl5BanBnXkFtZTgwNDgzODU3MTI@._V1_UX182_CR0,0,182,268_AL_.jpg</thumbnail> 
<link>$doregex[id3]</link>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'https://streamango.com/f/lfkclpkeflprnbts/37_C1rcu70_-1080p_mkv'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>https://images-na.ssl-images-amazon.com/images/M/MV5BMjY2OTM2Njc3Ml5BMl5BanBnXkFtZTgwNDgzODU3MTI@._V1_UX182_CR0,0,182,268_AL_.jpg</thumbnail> 
<regex><name>nombre</name><expres>El círculo</expres><page></page></regex>
<regex><name>nombre2</name><expres>$pyFunction:'$doregex[nombre]'.replace(" ", "+")</expres>
<page></page>
</regex>
</item>
<item>
<SetViewMode>500</SetViewMode>
<title>[COLOR orange]El Otro Guardaespaldas[/COLOR][COLOR white] 2017 [/COLOR]</title>
<info>
Duración: 118 minutos.
Edad Recomendada: 16.
Género: Acción, Comedia.
El prestigioso guardaespaldas Michael Bryce (Ryan Reynolds) 
recibe un nuevo cliente: un asesino a sueldo, Darius Kincaid 
(Samuel L. Jackson), que debe testificar 
en un juicio en La Haya contra un cruel dictador (Gary Oldman).
</info>
<link>$doregex[select]</link>
<regex>
<name>select</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import xbmcgui
    dialog = xbmcgui.Dialog()
    ret = dialog.select('Ver via:', ['Quasar', 'Torrenter', 'Por defecto'])
    channels = ['plugin://plugin.video.quasar/play?uri=https://files.grantorrent.com/torrents/peliculas/El_otro_guardaespaldas_HDRIp.torrent',
	'plugin://plugin.video.quasar/play?uri=https://files.grantorrent.com/torrents/peliculas/El_otro_guardaespaldas_MicroHD.torrent', 
    'plugin://plugin.video.torrenter/?action=playSTRM&url=https://files.grantorrent.com/torrents/peliculas/El_otro_guardaespaldas_HDRIp.torrent', 
	'plugin://plugin.video.torrenter/?action=playSTRM&url=https://files.grantorrent.com/torrents/peliculas/El_otro_guardaespaldas_MicroHD.torrent']
    return channels[ret]
]]></expres>
<page></page>
</regex>
<thumbnail>https://grantorrent.com/wp-content/uploads/2017/12/El-otro-guardaespaldas.jpg</thumbnail>
<fanart>https://grantorrent.com/wp-content/uploads/2017/12/El-otro-guardaespaldas.jpg</fanart>
</item>
<!-- F -->

<!-- G -->

<!-- H -->

<!-- I -->


<!-- J -->

<!-- K -->

<!-- L -->
<item>
    <title>[COLOR orange][B]Las aventuras de Tadeo Jones[/B][COLOR white] Castellano [/COLOR][/COLOR]</title>
<thumbnail>http://es.web.img2.acsta.net/medias/nmedia/18/90/40/12/20199350.jpg</thumbnail> 
<fanart>http://es.web.img2.acsta.net/medias/nmedia/18/90/40/12/20199350.jpg</fanart>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'http://streamcloud.eu/cv706fmlg1j2/LsAventdTadJonBRRIP_-_www.newpct.com.avi.html'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail></thumbnail> 
<thumbnail>http://es.web.img2.acsta.net/medias/nmedia/18/90/40/12/20199350.jpg</thumbnail> 
</item>
<item>
<thumbnail>https://image.tmdb.org/t/p/original/$doregex[imagen]</thumbnail> 
<fanart>https://image.tmdb.org/t/p/original/$doregex[imagen]</fanart>

 <link>$doregex[id3]</link>
 
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'https://streamango.com/f/etmplfmolcplccqs/The_mummy_2017_1080p-dual-cast_mp4'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>https://image.tmdb.org/t/p/original/$doregex[imagen]</thumbnail> 
<regex><name>imagen</name><expres><![CDATA[poster_path\":\"\\/(.*?)\"]]></expres><page>https://api.themoviedb.org/3/search/movie?api_key=3d8a2c67653e2f8fd7dd09959e835f02&amp;language=es&amp;query=$doregex[nombre2]</page></regex>
<title>[COLOR orange]$doregex[nombre]  [/COLOR][COLOR white][/COLOR]</title>
<info></info>
<regex><name>nombre</name><expres>La momia (2017)</expres><page></page></regex>
<regex><name>nombre2</name><expres>$pyFunction:'$doregex[nombre]'.replace(" ", "+")</expres>
<page></page></regex>
</item>
<!-- M -->

<!-- N -->

<!-- Ñ -->

<!-- O -->

<!-- P -->
<item>
<thumbnail>https://image.tmdb.org/t/p/original/$doregex[imagen]</thumbnail> 
<fanart>https://image.tmdb.org/t/p/original/$doregex[imagen]</fanart>

 <link>$doregex[id3]</link>
 
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urlresolver
    url = 'https://streamango.com/f/bmdqeknntemkdelc/Pir4t4s_d3l_C4rib3_L4_v3ng4nz4_d3_S4l4z4r_mkv'
    try:
        u = urlresolver.resolve(url)
    except:
        u = 'http://www.gruponetai.com/videos/error.mp4'
    return u
]]></expres>
<page></page>
</regex>
<thumbnail>https://image.tmdb.org/t/p/original/$doregex[imagen]</thumbnail> 
<regex><name>imagen</name><expres><![CDATA[poster_path\":\"\\/(.*?)\"]]></expres><page>https://api.themoviedb.org/3/search/movie?api_key=3d8a2c67653e2f8fd7dd09959e835f02&amp;language=es&amp;query=$doregex[nombre2]</page></regex>
<title>[COLOR orange]$doregex[nombre]  [/COLOR][COLOR white] 720p. [/COLOR]</title>
<info></info>
<regex><name>nombre</name><expres>Piratas del Caribe: La venganza de Salazar</expres><page></page></regex>
<regex><name>nombre2</name><expres>$pyFunction:'$doregex[nombre]'.replace(" ", "+")</expres>
<page></page></regex>
</item>
<!-- Q -->

<!-- R -->

<!-- S -->

<!-- T -->

<!-- U -->

<!-- V -->

<!-- W -->

<!-- X -->

<!-- Y -->

<!-- Z -->
